version: '3.8'

services:
  web:
    build: .
    container_name: django_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=ecommerce_project.settings

  db:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_DATABASE: ecommerce_db
      MYSQL_USER: ecommerce_user
      MYSQL_PASSWORD: ecommerce_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - ./db.sqlite3:/tmp/db.sqlite3:ro
      - ./mysql-init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    command: >
      --default-authentication-plugin=mysql_native_password 
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci

volumes:
  mysql_data:

# version: '3.8'

# services:
#   web:
#     build: .
#     container_name: django_web
#     command: ["/wait-for-it.sh", "db:3306", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     environment:
#       - DEBUG=True
#       - DJANGO_SETTINGS_MODULE=ecommerce_project.settings

#   db:
#     build:
#       context: .
#       dockerfile: Dockerfile.mysql
#     container_name: mysql_db
#     restart: always
#     environment:
#       MYSQL_DATABASE: ecommerce_db
#       MYSQL_USER: ecommerce_user
#       MYSQL_PASSWORD: ecommerce_password
#       MYSQL_ROOT_PASSWORD: root_password
#     ports:
#       - "3306:3306"
#     volumes:
#       - ./mysql-init:/docker-entrypoint-initdb.d
#       - mysql_data:/var/lib/mysql
#     command: >
#       mysqld 
#       --default-authentication-plugin=mysql_native_password 
#       --character-set-server=utf8mb4 
#       --collation-server=utf8mb4_unicode_ci 
#       --skip-host-cache 
#       --skip-name-resolve

# volumes:
#   mysql_data:
